=begin
#Domain Group API V1

#Provides public access to Domain's microservices

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.9

=end

require 'uri'

module DomainClient
  class SalesResultsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Retrieves sales results for a given city
    # @param city City. Supported cities are: &#x60;Sydney&#x60;, &#x60;Melbourne&#x60;, &#x60;Brisbane&#x60;, &#x60;Adelaide&#x60;, &#x60;Canberra&#x60;
    # @param [Hash] opts the optional parameters
    # @return [DomainSalesResultsServiceV1ModelDomainSalesResultsModelCityResultsSummary]
    def sales_results_get(city, opts = {})
      data, _status_code, _headers = sales_results_get_with_http_info(city, opts)
      data
    end

    # Retrieves sales results for a given city
    # @param city City. Supported cities are: &#x60;Sydney&#x60;, &#x60;Melbourne&#x60;, &#x60;Brisbane&#x60;, &#x60;Adelaide&#x60;, &#x60;Canberra&#x60;
    # @param [Hash] opts the optional parameters
    # @return [Array<(DomainSalesResultsServiceV1ModelDomainSalesResultsModelCityResultsSummary, Fixnum, Hash)>] DomainSalesResultsServiceV1ModelDomainSalesResultsModelCityResultsSummary data, response status code and response headers
    def sales_results_get_with_http_info(city, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SalesResultsApi.sales_results_get ...'
      end
      # verify the required parameter 'city' is set
      if @api_client.config.client_side_validation && city.nil?
        fail ArgumentError, "Missing the required parameter 'city' when calling SalesResultsApi.sales_results_get"
      end
      # resource path
      local_var_path = '/v1/salesResults/{city}'.sub('{' + 'city' + '}', city.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json', 'text/html', 'application/xml', 'text/xml'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DomainSalesResultsServiceV1ModelDomainSalesResultsModelCityResultsSummary')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SalesResultsApi#sales_results_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieves metadata regarding sales result data
    # @param [Hash] opts the optional parameters
    # @return [DomainSalesResultsServiceV1ModelDomainSalesResultsModelCityResultsDate]
    def sales_results_head(opts = {})
      data, _status_code, _headers = sales_results_head_with_http_info(opts)
      data
    end

    # Retrieves metadata regarding sales result data
    # @param [Hash] opts the optional parameters
    # @return [Array<(DomainSalesResultsServiceV1ModelDomainSalesResultsModelCityResultsDate, Fixnum, Hash)>] DomainSalesResultsServiceV1ModelDomainSalesResultsModelCityResultsDate data, response status code and response headers
    def sales_results_head_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SalesResultsApi.sales_results_head ...'
      end
      # resource path
      local_var_path = '/v1/salesResults/_head'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json', 'text/html', 'application/xml', 'text/xml'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DomainSalesResultsServiceV1ModelDomainSalesResultsModelCityResultsDate')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SalesResultsApi#sales_results_head\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieves listing summaries corresponding to the sales results
    # @param city City. Supported cities are: &#x60;Sydney&#x60;, &#x60;Melbourne&#x60;, &#x60;Brisbane&#x60;, &#x60;Adelaide&#x60;, &#x60;Canberra&#x60;
    # @param [Hash] opts the optional parameters
    # @return [Array<DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary>]
    def sales_results_listings(city, opts = {})
      data, _status_code, _headers = sales_results_listings_with_http_info(city, opts)
      data
    end

    # Retrieves listing summaries corresponding to the sales results
    # @param city City. Supported cities are: &#x60;Sydney&#x60;, &#x60;Melbourne&#x60;, &#x60;Brisbane&#x60;, &#x60;Adelaide&#x60;, &#x60;Canberra&#x60;
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary>, Fixnum, Hash)>] Array<DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary> data, response status code and response headers
    def sales_results_listings_with_http_info(city, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SalesResultsApi.sales_results_listings ...'
      end
      # verify the required parameter 'city' is set
      if @api_client.config.client_side_validation && city.nil?
        fail ArgumentError, "Missing the required parameter 'city' when calling SalesResultsApi.sales_results_listings"
      end
      # resource path
      local_var_path = '/v1/salesResults/{city}/listings'.sub('{' + 'city' + '}', city.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json', 'text/html', 'application/xml', 'text/xml'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SalesResultsApi#sales_results_listings\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
