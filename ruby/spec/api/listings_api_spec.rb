=begin
#Domain Group API V1

#Provides public access to Domain's microservices

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.9

=end

require 'spec_helper'
require 'json'

# Unit tests for DomainClient::ListingsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ListingsApi' do
  before do
    # run before each test
    @instance = DomainClient::ListingsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ListingsApi' do
    it 'should create an instance of ListingsApi' do
      expect(@instance).to be_instance_of(DomainClient::ListingsApi)
    end
  end

  # unit tests for listing_locations_search
  # Suggests listing locations
  # The resulting suggested location can be of type \&quot;suburb\&quot; / \&quot;area\&quot; / \&quot;region\&quot;.    The &#x60;name&#x60; property corresponds to the type of location returned.    The area name / region name can be fed into the corresponding fields search fields.  See [&#x60;v1/listings/residential/_search&#x60;](/docs/endpoints/listings/listings_detailedresidentialsearch)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :terms Suburb / area / region prefix, or postcode
  # @return [Array<DomainPublicAdapterWebApiModelsV1ListingsListingLocation>]
  describe 'listing_locations_search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for listings_detailed_business_search
  # Retrieves business listings matching the specified criteria.
  # @param parameters Search parameters
  # @param [Hash] opts the optional parameters
  # @return [Array<DomainPublicAdapterWebApiModelsV1ListingsBusinessListing>]
  describe 'listings_detailed_business_search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for listings_detailed_commercial_search
  # Retrieves commercial listings matching the specified criteria.
  # @param parameters Search parameters
  # @param [Hash] opts the optional parameters
  # @return [Array<DomainPublicAdapterWebApiModelsV1ListingsBusinessListing>]
  describe 'listings_detailed_commercial_search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for listings_detailed_residential_search
  # Retrieves residential listings matching the specified criteria.
  # Search results are limited to the first 1000 results.    If the number of results is greater, the intention is to refine the search by adding more restrictive parameters, to find a relevant set of results.
  # @param parameters Search parameters
  # @param [Hash] opts the optional parameters
  # @return [Array<DomainSearchServiceV2ModelDomainSearchContractsV2SearchResult>]
  describe 'listings_detailed_residential_search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for listings_get
  # Retrieves a specific listing.
  # @param id Listing identifier
  # @param [Hash] opts the optional parameters
  # @return [DomainPublicAdapterWebApiModelsV1ListingsListing]
  describe 'listings_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for listings_get_enquiries
  # Returns enquiries for a given listing
  # @param id Listing identifier
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_number Page number for paginated results (25 per page)
  # @return [Array<DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport>]
  describe 'listings_get_enquiries test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for listings_get_listing_report
  # Gets the processing report
  # @param id Report id
  # @param [Hash] opts the optional parameters
  # @return [DomainListingAdminServiceV1ModelListingReport]
  describe 'listings_get_listing_report test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for listings_get_listing_report_by_reference
  # Searches processing reports
  # @param agency_id Domain agency Id
  # @param provider_ad_id External provider advertisement identifier
  # @param [Hash] opts the optional parameters
  # @return [Array<DomainListingAdminServiceV1ModelListingReport>]
  describe 'listings_get_listing_report_by_reference test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for listings_get_listing_statistics
  # Retrieves listings stats for the specified listing
  # @param id Listing identifier
  # @param [Hash] opts the optional parameters
  # @option opts [String] :time_period The time period to show statistics for. Valid values are: &#x60;last7Days&#x60;, &#x60;last90Days&#x60;, &#x60;wholeCampaign&#x60;
  # @return [DomainPublicAdapterWebApiModelsV1ListingsStatisticsReport]
  describe 'listings_get_listing_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for listings_get_listing_statistics_by_agent_id
  # Retrieves stats for the listings of a given agent
  # @param agent_id Agent identifier
  # @param time_period The time period to show statistics for. Valid values are: &#x60;last7Days&#x60;, &#x60;last90Days&#x60;, &#x60;wholeCampaign&#x60;
  # @param status_filter Listing filter
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_number Page number for paginated results
  # @option opts [Integer] :page_size Page size for paginated results
  # @return [Array<DomainPublicAdapterWebApiModelsV1ListingsStatistics>]
  describe 'listings_get_listing_statistics_by_agent_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for listings_update_offmarket_details
  # Takes a listing offmarket
  # @param id Listing identifier
  # @param off_market_details 
  # @param [Hash] opts the optional parameters
  # @return [DomainListingAdminServiceV1ModelListingResponse]
  describe 'listings_update_offmarket_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for listings_upsert_business_listing
  # Creates or updates a business listing
  # @param listing The business listing
  # @param [Hash] opts the optional parameters
  # @return [DomainListingAdminServiceV1ModelListingResponse]
  describe 'listings_upsert_business_listing test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for listings_upsert_commercial_listing
  # Creates or updates a commercial listing
  # @param listing The commercial listing
  # @param [Hash] opts the optional parameters
  # @return [DomainListingAdminServiceV1ModelListingResponse]
  describe 'listings_upsert_commercial_listing test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for listings_upsert_residential_listing
  # Creates or updates a residential listing
  # @param listing The residential listing
  # @param [Hash] opts the optional parameters
  # @return [DomainListingAdminServiceV1ModelListingResponse]
  describe 'listings_upsert_residential_listing test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
