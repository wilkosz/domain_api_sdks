=begin
#Domain Group API V1

#Provides public access to Domain's microservices

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.9

=end

require 'spec_helper'
require 'json'

# Unit tests for DomainClient::AgenciesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AgenciesApi' do
  before do
    # run before each test
    @instance = DomainClient::AgenciesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AgenciesApi' do
    it 'should create an instance of AgenciesApi' do
      expect(@instance).to be_instance_of(DomainClient::AgenciesApi)
    end
  end

  # unit tests for agencies_create_test_agency
  # Creates a test agency
  # Enables automatic creation of a test agency in our sandbox environment.
  # @param [Hash] opts the optional parameters
  # @return [DomainAgencyServiceV2ModelAgency]
  describe 'agencies_create_test_agency test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for agencies_get
  # Retrieves a specific agency details.
  # @param id Agency identifier
  # @param [Hash] opts the optional parameters
  # @return [DomainAgencyServiceV2ModelAgency]
  describe 'agencies_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for agencies_get_bundle_contracts
  # Retrieves the product bundle contracts applicable to the specific agency.
  # @param id Agency identifier
  # @param [Hash] opts the optional parameters
  # @return [Array<DomainBookingServiceV1ModelProductBundleContractDetailsResponse>]
  describe 'agencies_get_bundle_contracts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for agencies_get_listings
  # Retrieves listings across all channels for a specific agency matching specified criteria.
  # Note that the result page size is clamped at 200.  Requesting a page size greater than this will be treated as if only a page size of 200 were requested.
  # @param id Agency identifier
  # @param [Hash] opts the optional parameters
  # @option opts [String] :listing_status_filter Filter for listing status
  # @option opts [DateTime] :date_updated_since Filter to remove listings not updated since before the given date time
  # @option opts [Integer] :page_number Page number for paginated results
  # @option opts [Integer] :page_size Page size for paginated results
  # @return [Array<DomainPublicAdapterWebApiModelsV1ListingsListing>]
  describe 'agencies_get_listings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for agencies_get_statistics
  # Retrieves statistics across all channels for a specific agency.
  # @param id Agency identifier
  # @param [Hash] opts the optional parameters
  # @option opts [String] :time_period Period to report on, Valid values are: &#x60;last7Days&#x60;, &#x60;last90Days&#x60;, &#x60;wholeCampaign&#x60;. Default is &#x60;last7Days&#x60;.
  # @option opts [String] :status_filter Status to filter, Valid values are: &#x60;Live&#x60;, &#x60;LiveAndArchived&#x60;. Default is &#x60;LiveAndArchived&#x60;
  # @option opts [Integer] :page_number Page number
  # @option opts [Integer] :page_size Page size
  # @return [Array<DomainPublicAdapterWebApiModelsV1ListingsStatistics>]
  describe 'agencies_get_statistics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for agencies_get_subscriptions
  # Retrieves the active subscriptions for the specific agency
  # @param id Agency identifier
  # @param [Hash] opts the optional parameters
  # @option opts [String] :channel Channel. Either &#x60;residential&#x60; or &#x60;commercial&#x60; (case insensitive). Defaults to &#x60;residential&#x60; if not provided
  # @return [Array<DomainAgencyServiceV1ModelAgencySubscriptionDto>]
  describe 'agencies_get_subscriptions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for agencies_head
  # Retrieves summary of agency search
  # Given a specified agency search criteria, this endpoint can be used to ascertain the result count that can be expected.
  # @param q Search phrase.  e.g. name:\&quot;Agency XYZ\&quot;
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_number Page number for paginated results
  # @option opts [Integer] :page_size Page size for paginated results
  # @return [nil]
  describe 'agencies_head test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for agencies_search
  # Retrieves summary of agencies matching the specified criteria.
  # &lt;para&gt;The &lt;code&gt;q&lt;/code&gt; parameter supports:&lt;/para&gt;  &lt;ul&gt;    &lt;li&gt;name: search by name eg. &lt;code&gt;name:\&quot;Agency XYZ\&quot;&lt;/code&gt;&lt;/li&gt;    &lt;li&gt;providerId: search by providerId. eg. &lt;code&gt;providerId:\&quot;ABC Software\&quot;&lt;/code&gt;&lt;/li&gt;    &lt;li&gt;domainUrl: search by domainUrl. eg. &lt;code&gt;domainUrl:\&quot;agency-xyz\&quot;&lt;/code&gt;&lt;/li&gt;    &lt;li&gt;dateUpdated: search by dateUpdated. eg. &lt;code&gt;dateUpdated:\&quot;2016-12-25\&quot;&lt;/code&gt;&lt;/li&gt;    &lt;li&gt;suburbId: search by suburbId. Lists supported.  eg. &lt;code&gt;suburbId:1&lt;/code&gt; eg. &lt;code&gt;suburbId:(1 OR 2 OR 3)&lt;/code&gt;.  Can include related suburbs by adding &lt;code&gt;in:related&lt;/code&gt;&lt;/li&gt;    &lt;li&gt;accountType: search by account type. Lists supported.  eg. &lt;code&gt;accountType:residential&lt;/code&gt; eg. &lt;code&gt;accountType:(residential OR commercial)&lt;/code&gt; Valid values are: none, residential, commerciallight, commercialfull, developer, holiday, business&lt;/li&gt;    &lt;li&gt;      &lt;code&gt;in:all&lt;/code&gt; includes archived agencies (archived agencies excluded by default)&lt;/li&gt;    &lt;li&gt;      &lt;code&gt;-is:selfservice&lt;/code&gt; excludes selfservice&lt;/li&gt;  &lt;/ul&gt;
  # @param q Search phrase.  e.g. name:\&quot;Agency XYZ\&quot;
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_number Page number for paginated results
  # @option opts [Integer] :page_size Page size for paginated results
  # @return [Array<DomainAgencyServiceV2ModelAgencySummary>]
  describe 'agencies_search test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
